Aufgaben Telekom Computer:
- Ubuntu installieren
- Partition im Bios ändern (falls noch nicht geschehen)
- PC ohne passwort und Keychain rausnehmen
- Application in das Verzeichnis "/.conf/autostart" verschieben
- Application mit chmod -x Berechtigen
- Shellscripte auf den Desktop kopieren und verlinken
- Auch Shellscripte mit chmod -x ausführbar machen
- [google-chrome startup options mit -Kiosk versehen oder Applikation rüber kopieren] - evtl nicht benötigt
- node installieren
- nodemon installieren
- Atom installieren für fehlerbehebung



node read write tutorial
https://www.youtube.com/watch?v=U57kU311-nE&t=302s

todos
#### files
#### static
- Elements.json richtig formatieren und als csv aus der drive laden
- in json convertieren ODER selbst schreiben (sollte vermutlich schneller gehen, da andere parameter)
[http://www.convertcsv.com/csv-to-json.htm]
- Elements.json erstellen und befüllen, including:
  - width (px)
  - height (px)
  - position (1,2,3... (array))/slot
  - source image (Baum.jpg)
  - Zugehörigkeit Stadtbild, zB. cityRelation = [0.1, 0.5, 0.9, 0] (heigh-tech, digital, regional, fortress)
- Diagram.json incloding
  - 4 city-scenarios as single objects, file: cityDiagram:{"Stadtbild":{"Fortress":{["Color": "Green",] "Arbeit": x, "Umwelt: x, "Bildung: x, "sozialG": x, "Wohnen": x } ...
  - evtl subcategorien

####### fluid
- define and program one file generated by votings:
  - "cityScenarioA": "votingAverage": x, "votingsAmount" -> newVotingAverage = (newVoting + votingAverage*votingAmount)/(votingAmount + 1)
  - "cityScenarioB": ...

####### Objects
- from that file following objects will be created and inserted into the scenario-collectiv-Object:
  - diagramFluid (i) (zB. Arbeit = CityDiagram.Stadtbild.Fortress.Arbeit*Fortress.votingAverage + CityDiagram.Stadtbild.Regional.Arbeit*Regional.votingAverage*...
  - CityScenarioFluid (slot1(Buildings): width, height, source.img, slot2: width, height, source.img,...) 



  ####programming
  - structure/define fluid json ::check::
  - find out how to save json ::check::
  - write voting and scenario function in front & backend
  - find out how to import json
  - find out how to save variables into an object or array
  - define structure of backendcode
  - generate static files
  - code it!



  IDEE:
  die Stimme des momentan Bewertenden zählt immer mind [x]%?
